---
- name: Find head host
  ansible.builtin.set_fact:
    head_host: >-
      {{ (groups['all'] | map('extract', hostvars)
          | selectattr('rke2_node_type','equalto','head')
          | map(attribute='inventory_hostname') | list | first) }}
  run_once: true

- name: Add Jetstack Helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
    kubeconfig: /etc/rancher/rke2/rke2.yaml
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

- name: Install/upgrade cert-manager (with CRDs)
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: "{{ cert_manager_namespace }}"
    create_namespace: true
    update_repo_cache: true
    wait: "{{ cert_manager_wait }}"
    chart_version: "{{ cert_manager_chart_version | default(omit) }}"
    values:
      installCRDs: "{{ cert_manager_install_crds }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

- name: Wait for cert-manager deployment to be Available
  kubernetes.core.k8s:
    api_version: apps/v1
    kind: Deployment
    name: cert-manager
    namespace: "{{ cert_manager_namespace }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 600
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

# (Optional) Ensure webhook & cainjector too
- name: Wait for cert-manager-webhook deployment to be Available
  kubernetes.core.k8s:
    api_version: apps/v1
    kind: Deployment
    name: cert-manager-webhook
    namespace: "{{ cert_manager_namespace }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 600
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

- name: Wait for cert-manager-cainjector deployment to be Available
  kubernetes.core.k8s:
    api_version: apps/v1
    kind: Deployment
    name: cert-manager-cainjector
    namespace: "{{ cert_manager_namespace }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 600
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

- name: Create Cloudflare API token Secret
  when: cert_manager_manage_cf_secret
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ cert_manager_cf_secret_name }}"
        namespace: "{{ cert_manager_cf_secret_namespace }}"
      type: Opaque
      stringData:
        api-token: "{{ lookup('vars', cert_manager_cf_token_var) }}"
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

- name: Apply ClusterIssuer (production)
  when: cert_manager_manage_issuer_prod
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    state: present
    template: "clusterissuer.yaml.j2"
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true

- name: Apply ClusterIssuer (staging)
  when: cert_manager_manage_issuer_staging
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    state: present
    template: "clusterissuer-staging.yaml.j2"
  delegate_to: "{{ head_host }}"
  become: true
  run_once: true
